
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu Apr 02 23:55:08 CST 2015
//----------------------------------------------------

import java_cup.runtime.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Thu Apr 02 23:55:08 CST 2015
  */
public class Parser2 extends java_cup.runtime.lr_parser {

    Datos d = new Datos();
  /** Default constructor. */
  public Parser2() {super();}

  /** Constructor which sets the default scanner. */
  public Parser2(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser2(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\053\000\002\002\004\000\002\021\002\000\002\022" +
    "\002\000\002\002\021\000\002\003\006\000\002\023\002" +
    "\000\002\024\002\000\002\025\002\000\002\011\014\000" +
    "\002\015\004\000\002\015\003\000\002\004\011\000\002" +
    "\026\002\000\002\027\002\000\002\030\002\000\002\017" +
    "\023\000\002\031\002\000\002\010\006\000\002\032\002" +
    "\000\002\033\002\000\002\012\011\000\002\034\002\000" +
    "\002\035\002\000\002\036\002\000\002\013\014\000\002" +
    "\037\002\000\002\040\002\000\002\041\002\000\002\014" +
    "\014\000\002\016\004\000\002\016\004\000\002\016\004" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\005\011\000\002\006\011\000\002\042\002\000\002" +
    "\043\002\000\002\044\002\000\002\020\032\000\002\045" +
    "\002\000\002\007\012" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\211\000\004\037\005\001\002\000\004\002\213\001" +
    "\002\000\004\004\006\001\002\000\004\036\007\001\002" +
    "\000\004\043\010\001\002\000\004\035\000\001\002\000" +
    "\004\035\012\001\002\000\004\030\013\001\002\000\004" +
    "\036\014\001\002\000\004\042\015\001\002\000\004\040" +
    "\uffff\001\002\000\004\040\017\001\002\000\004\037\021" +
    "\001\002\000\004\037\210\001\002\000\004\005\161\001" +
    "\002\000\004\037\024\001\002\000\004\037\075\001\002" +
    "\000\004\010\025\001\002\000\004\040\026\001\002\000" +
    "\004\041\027\001\002\000\004\032\ufff1\001\002\000\004" +
    "\037\066\001\002\000\006\037\uffdf\041\027\001\002\000" +
    "\006\037\uffe0\041\027\001\002\000\006\037\uffe1\041\027" +
    "\001\002\000\006\031\036\034\035\001\002\000\004\042" +
    "\047\001\002\000\004\042\037\001\002\000\004\034\uffec" +
    "\001\002\000\004\034\041\001\002\000\004\042\042\001" +
    "\002\000\004\033\uffeb\001\002\000\004\033\044\001\002" +
    "\000\004\035\uffea\001\002\000\004\035\046\001\002\000" +
    "\006\037\uffe9\041\uffe9\001\002\000\006\031\uffe8\033\uffef" +
    "\001\002\000\004\033\060\001\002\000\004\031\052\001" +
    "\002\000\004\042\053\001\002\000\004\033\uffe7\001\002" +
    "\000\004\033\055\001\002\000\004\035\uffe6\001\002\000" +
    "\004\035\057\001\002\000\006\037\uffe5\041\uffe5\001\002" +
    "\000\004\035\uffee\001\002\000\004\035\062\001\002\000" +
    "\006\037\uffed\041\uffed\001\002\000\004\037\uffe4\001\002" +
    "\000\004\037\uffe3\001\002\000\004\037\uffe2\001\002\000" +
    "\004\022\067\001\002\000\004\040\070\001\002\000\004" +
    "\037\uffde\001\002\000\004\032\072\001\002\000\004\042" +
    "\073\001\002\000\006\031\ufff0\034\ufff0\001\002\000\004" +
    "\037\151\001\002\000\004\011\076\001\002\000\004\040" +
    "\077\001\002\000\004\037\101\001\002\000\004\037\145" +
    "\001\002\000\004\012\102\001\002\000\004\040\103\001" +
    "\002\000\004\041\uffdc\001\002\000\004\041\105\001\002" +
    "\000\004\032\ufffc\001\002\000\006\037\ufff7\041\105\001" +
    "\002\000\004\037\110\001\002\000\004\024\111\001\002" +
    "\000\004\040\112\001\002\000\004\037\113\001\002\000" +
    "\004\014\114\001\002\000\004\040\115\001\002\000\004" +
    "\041\uffdb\001\002\000\004\041\105\001\002\000\004\037" +
    "\120\001\002\000\004\026\121\001\002\000\004\040\122" +
    "\001\002\000\004\037\123\001\002\000\004\013\124\001" +
    "\002\000\004\040\uffda\001\002\000\004\040\126\001\002" +
    "\000\004\041\105\001\002\000\004\037\130\001\002\000" +
    "\004\025\131\001\002\000\004\040\132\001\002\000\004" +
    "\037\uffd9\001\002\000\004\037\ufff8\001\002\000\004\032" +
    "\135\001\002\000\004\042\136\001\002\000\004\034\ufffb" +
    "\001\002\000\004\034\140\001\002\000\004\042\141\001" +
    "\002\000\004\033\ufffa\001\002\000\004\033\143\001\002" +
    "\000\004\035\144\001\002\000\006\037\ufff9\041\ufff9\001" +
    "\002\000\004\023\146\001\002\000\004\040\147\001\002" +
    "\000\004\037\uffdd\001\002\000\004\037\ufffd\001\002\000" +
    "\004\015\152\001\002\000\004\040\153\001\002\000\004" +
    "\041\uffd8\001\002\000\004\041\105\001\002\000\004\037" +
    "\156\001\002\000\004\027\157\001\002\000\004\040\160" +
    "\001\002\000\004\037\uffd7\001\002\000\004\040\162\001" +
    "\002\000\004\037\164\001\002\000\004\037\205\001\002" +
    "\000\004\006\165\001\002\000\004\040\166\001\002\000" +
    "\004\041\ufff5\001\002\000\004\041\105\001\002\000\004" +
    "\037\ufff4\001\002\000\004\037\172\001\002\000\004\020" +
    "\173\001\002\000\004\040\174\001\002\000\004\037\175" +
    "\001\002\000\004\007\176\001\002\000\004\040\177\001" +
    "\002\000\004\041\ufff3\001\002\000\004\041\105\001\002" +
    "\000\004\037\202\001\002\000\004\021\203\001\002\000" +
    "\004\040\204\001\002\000\004\037\ufff2\001\002\000\004" +
    "\017\206\001\002\000\004\040\207\001\002\000\004\037" +
    "\ufff6\001\002\000\004\016\211\001\002\000\004\040\212" +
    "\001\002\000\004\002\ufffe\001\002\000\004\002\001\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\211\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\021\010\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\022\015\001\001" +
    "\000\002\001\001\000\006\003\017\004\021\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\022\001\001" +
    "\000\004\006\073\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\010\033\012\032\013\031\014\030\016\027" +
    "\001\001\000\004\031\070\001\001\000\002\001\001\000" +
    "\014\010\033\012\032\013\031\014\030\016\064\001\001" +
    "\000\014\010\033\012\032\013\031\014\030\016\063\001" +
    "\001\000\014\010\033\012\032\013\031\014\030\016\062" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\037\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\035\042\001\001\000\002\001\001\000" +
    "\004\036\044\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\032\047\037\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\040\053\001\001" +
    "\000\002\001\001\000\004\041\055\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\033\060\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\147\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\020\077\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\042\103" +
    "\001\001\000\006\011\105\015\106\001\001\000\004\023" +
    "\133\001\001\000\006\011\105\015\132\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\043\115" +
    "\001\001\000\006\011\105\015\116\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\044\124\001\001\000\002\001" +
    "\001\000\006\011\105\015\126\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\024\136\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\141\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\045\153\001\001\000\006\011\105\015" +
    "\154\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\017" +
    "\162\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\026\166\001\001\000\006\011\105\015" +
    "\167\001\001\000\004\027\170\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\030\177\001\001" +
    "\000\006\011\105\015\200\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser2$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser2$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser2$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    /**Metodo al que se llama automáticamente ante algún error sintactico.*/
    public void syntax_error(Symbol s){
        System.out.println("Error en la Línea " + (s.right+1) +" Columna "+s.left+ ". Identificador "
        +s.value + " no reconocido." );

        d.errores = d.errores +"\n"+"Error SINTACTICO en la Línea: " + (s.right+1) +" Columna: "+s.left+ ". Identificador: "
                +s.value ;

    }

    /**Metodo al que se llama en el momento en que ya no es posible una recuperación de
    errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error sin rec en la Línea " + (s.right+1)+ " Columna "+s.left+ ". Identificador " +
        s.value + " no reconocido.");

        d.errores = d.errores +"\n"+"Error SINTACTICO sin recuperacion en la Línea: " + (s.right+1) +" Columna: "+s.left+ ". Identificador: "
                +s.value ;

    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Parser2$actions {


Datos d = new Datos();
int ne = 0;
int nm = 0;
String nombretemp = "";
String tipotemp = "";
int xtemp = 0;
int ytemp = 0;
int ctetemp = 0;

  private final Parser2 parser;

  /** Constructor */
  CUP$Parser2$actions(Parser2 parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Parser2$do_action(
    int                        CUP$Parser2$act_num,
    java_cup.runtime.lr_parser CUP$Parser2$parser,
    java.util.Stack            CUP$Parser2$stack,
    int                        CUP$Parser2$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser2$result;

      /* select the action based on the action number */
      switch (CUP$Parser2$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // MET ::= etiqa ameta etiqc NT$20 LISTACOOR etiqa cmeta etiqc 
            {
              Object RESULT =null;
              // propagate RESULT from NT$20
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).value;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("MET",5, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-7)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // NT$20 ::= 
            {
              Object RESULT =null;
 tipotemp = "meta"; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$20",35, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // EXTRAS ::= etiqa aarmas etiqc NT$17 LISTACOOR etiqa carmas etiqc etiqa abombas etiqc NT$18 LISTACOOR etiqa cbombas etiqc etiqa abonus NT$19 etiqc LISTACOOR etiqa cbonus etiqc 
            {
              Object RESULT =null;
              // propagate RESULT from NT$19
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).value;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("EXTRAS",14, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-23)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // NT$19 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).value;
 tipotemp = "bonus"; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$19",34, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // NT$18 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-7)).value;
 tipotemp = "bomba"; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$18",33, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // NT$17 ::= 
            {
              Object RESULT =null;
 tipotemp = "arma"; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$17",32, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // EXT ::= etiqa aextras etiqc EXTRAS etiqa cextras etiqc 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("EXT",4, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // PAR ::= etiqa aparedes etiqc LISTACOORPA etiqa cparedes etiqc 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("PAR",3, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // LISTACOORPA ::= M3 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("LISTACOORPA",12, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // LISTACOORPA ::= M2 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("LISTACOORPA",12, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // LISTACOORPA ::= M1 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("LISTACOORPA",12, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // LISTACOORPA ::= M3 LISTACOORPA 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("LISTACOORPA",12, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // LISTACOORPA ::= M2 LISTACOORPA 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("LISTACOORPA",12, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // LISTACOORPA ::= M1 LISTACOORPA 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("LISTACOORPA",12, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // M3 ::= INILISTC coma numero NT$14 dpts numero NT$15 parentc NT$16 pycoma 
            {
              Object RESULT =null;
              // propagate RESULT from NT$16
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-7)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-7)).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-7)).value;
		int zleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).left;
		int zright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).right;
		String z = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).value;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("M3",10, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-9)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$16 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).value;
		int zleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).left;
		int zright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).right;
		String z = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).value;
 d.ListaMuro.add(new NodoMuroCoor("", false, 0, 0, 0));

                                  d.ListaMuro.get(nm).setNombre(nombretemp);
                                  d.ListaMuro.get(nm).setHorizontal(false);
                                  d.ListaMuro.get(nm).setIni(ytemp);
                                  d.ListaMuro.get(nm).setFin(ctetemp);
                                  d.ListaMuro.get(nm).setCte(xtemp);
                                  nm++; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$16",31, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // NT$15 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).value;
		int zleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int zright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String z = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 ctetemp = Integer.parseInt(z); 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$15",30, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // NT$14 ::= 
            {
              Object RESULT =null;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 ytemp = Integer.parseInt(y); 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$14",29, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // M2 ::= INILISTC dpts numero NT$11 coma numero NT$12 parentc NT$13 pycoma 
            {
              Object RESULT =null;
              // propagate RESULT from NT$13
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-7)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-7)).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-7)).value;
		int zleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).left;
		int zright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).right;
		String z = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).value;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("M2",9, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-9)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // NT$13 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).value;
		int zleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).left;
		int zright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).right;
		String z = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).value;
 d.ListaMuro.add(new NodoMuroCoor("", false, 0, 0, 0));

                                  d.ListaMuro.get(nm).setNombre(nombretemp);
                                  d.ListaMuro.get(nm).setHorizontal(true);
                                  d.ListaMuro.get(nm).setIni(xtemp);
                                  d.ListaMuro.get(nm).setFin(ytemp);
                                  d.ListaMuro.get(nm).setCte(ctetemp);
                                  nm++; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$13",28, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // NT$12 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).value;
		int zleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int zright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String z = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 ctetemp = Integer.parseInt(z); 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$12",27, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NT$11 ::= 
            {
              Object RESULT =null;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 ytemp = Integer.parseInt(y); 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$11",26, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // M1 ::= INILISTC coma numero NT$9 parentc NT$10 pycoma 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).value;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("M1",8, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NT$10 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).value;
 d.ListaMuro.add(new NodoMuroCoor("", false, 0, 0, 0));

                              d.ListaMuro.get(nm).setNombre(nombretemp);
                              d.ListaMuro.get(nm).setHorizontal(true);
                              d.ListaMuro.get(nm).setIni(xtemp);
                              d.ListaMuro.get(nm).setFin(xtemp);
                              d.ListaMuro.get(nm).setCte(ytemp);
                              nm++; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$10",25, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // NT$9 ::= 
            {
              Object RESULT =null;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 ytemp = Integer.parseInt(y); 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$9",24, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // INILISTC ::= oracion NT$8 parenta numero 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
		 xtemp = Integer.parseInt(x); 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("INILISTC",6, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NT$8 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 nombretemp = nom; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$8",23, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // PERSONAJES ::= etiqa aheroes etiqc NT$5 LISTACOOR NT$6 etiqa cheroes etiqc etiqa avillanos etiqc NT$7 LISTACOOR etiqa cvillanos etiqc 
            {
              Object RESULT =null;
              // propagate RESULT from NT$7
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).value;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("PERSONAJES",13, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-16)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NT$7 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).value;
 tipotemp = "villano"; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$7",22, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // NT$6 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).value;
 d.NombreHer = nombretemp; d.XHer = xtemp; d.YHer = ytemp;  
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$6",21, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // NT$5 ::= 
            {
              Object RESULT =null;
 tipotemp = "heroe"; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$5",20, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // PER ::= etiqa apersonajes etiqc PERSONAJES etiqa cpersonajes etiqc 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("PER",2, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // LISTACOOR ::= NOLIST 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("LISTACOOR",11, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // LISTACOOR ::= NOLIST LISTACOOR 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("LISTACOOR",11, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // NOLIST ::= oracion NT$2 parenta numero NT$3 coma numero NT$4 parentc pycoma 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-9)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-9)).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-9)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).value;
		  d.ListaExtrasCoor.add(new NodoCoor("","",0,0));

                                    d.ListaExtrasCoor.get(ne).setNombre(nombretemp);
                                    d.ListaExtrasCoor.get(ne).setTipo(tipotemp);
                                    d.ListaExtrasCoor.get(ne).setX(xtemp);
                                    d.ListaExtrasCoor.get(ne).setY(ytemp);
                                    ne++; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NOLIST",7, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-9)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // NT$4 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String y = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 ytemp = Integer.parseInt(y); 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$4",19, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // NT$3 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-2)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 xtemp = Integer.parseInt(x); 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$3",18, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // NT$2 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 nombretemp = nom; 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$2",17, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // EST ::= PER PAR EXT MET 
            {
              Object RESULT =null;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("EST",1, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-3)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIAL ::= etiqa aescenarios igual nombrefo NT$0 pycoma dimension igual numero NT$1 etiqc EST etiqa cescenarios etiqc 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).value;
		int nfoleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-11)).left;
		int nforight = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-11)).right;
		String nfo = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-11)).value;
		int nuleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).left;
		int nuright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).right;
		String nu = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-6)).value;

              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("INICIAL",0, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-14)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // NT$1 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-4)).value;
		int nfoleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).left;
		int nforight = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).right;
		String nfo = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-5)).value;
		int nuleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int nuright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String nu = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 d.Dimension = Integer.parseInt(nu); 
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$1",16, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
            {
              Object RESULT =null;
		int nfoleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).left;
		int nforight = ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()).right;
		String nfo = (String)((java_cup.runtime.Symbol) CUP$Parser2$stack.peek()).value;
 d.NombreFon = nfo;
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("NT$0",15, ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          return CUP$Parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIAL EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)).value;
		RESULT = start_val;
              CUP$Parser2$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser2$stack.elementAt(CUP$Parser2$top-1)), ((java_cup.runtime.Symbol)CUP$Parser2$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser2$parser.done_parsing();
          return CUP$Parser2$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

